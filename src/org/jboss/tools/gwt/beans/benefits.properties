GET_BENEFITS_SQL = select id,team from account where username = :username and password = :password

CREATE_CLIENT_SQL = INSERT INTO test_prefixTELOS (INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, DOB, COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, INSURANCE_FROM, INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, YEAR_OF_MANUFACTURING, NCB_PERCENTAGE, \
POLICY_TYPE, ID_CARD, DESPATCH_DATE,  SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
 SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, CREATED_BY) \
VALUES(:clientName, :phoneNumber, :secondaryPhoneNumber, :dateOfBirth, :company, :eMail, :secondaryEmail, :gender, :industry, :address, \
:policyNumber, :endrsNumber, :policyStartdate, :policyEndDate, :insCompanyName, :insBranchName, :officeCode, :source, :policyType, \
:premiumAmount, :terrorismPremiumAmount, :serviceTaxPercentage, :serviceTax, :totalPremiumAmount, :commionRate, :commionRateAmount, :vehicleNumber, :iDV, :vehicleMake, :vehicleManufactureYear, :nBC, \
:fireTypeOfPolicy, :iDCard, :miscDispatchDate, :marineTypeOfPolicy, :marineOpenPolicy, :marineOpenCover, :marineOtherPolicies, :marineVoyageFrom, :marineVoyageTo, :basicRate, :earthQuakePremium, :anyAdditionalPremium, \
:sumInsured, :collectionDate, :agent, :policyDetails, :userName)

GET_CLIENT_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where INSURED_NAME LIKE '%' :clientName '%'
 
 
GET_CLIENT_BY_CAR_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where VEHICLE_NO LIKE '%' :clientName '%'
 
 
GET_CLIENT_BY_PHONE_NUM_SQL = select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where PHONE_NO LIKE '%' :clientName '%'
 
GET_CLIENT_BY_POLICY_DATE_SQL = select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where INSURANCE_FROM BETWEEN :clientFromDate and :clientToDate
 
GET_CLIENT_BY_SERIAL_NO_SQL = select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where id = :clientId
 
GET_CLIENT_BY_POLICY_NO_SQL = select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where POLICY_CERTIFICATE_NO LIKE '%' :clientPolicyNo '%'
 
GET_DOCUMENTS_BY_CLIENT_ID = select id,name,description,DATE(updated_on) updated_on,scanned_by,(SELECT max(email_id) FROM email_file WHERE file_id = scan.id) sent from scan where client_id  =:clientId
 
UPDATE_CLIENT_SQL = UPDATE test_prefixTELOS SET INSURED_NAME=:clientName, PHONE_NO=:phoneNumber, SECONDARY_PHONE_NO= :secondaryPhoneNumber, DOB=:dateOfBirth, COMPANY=:company, EMAIL=:eMail, SECONDARY_EMAIL=:secondaryEmail, GENDER=:gender, INDUSTRY=:industry, INSURED_ADDRESS=:address, \
POLICY_CERTIFICATE_NO=:policyNumber, ENDORS_NO=:endrsNumber, INSURANCE_FROM=:policyStartdate, INSURANCE_TO=:policyEndDate, COMPANY_NAME=:insCompanyName, BRANCH_NAME=:insBranchName, OFFICE_CODE=:officeCode, SOURCE=:source, DEPARTMENT=:policyType, \
PREMIUM_AMOUNT=:premiumAmount, TERRORISM_PREMIUM=:terrorismPremiumAmount, SERVICE_TAX_PERCENTAGE=:serviceTaxPercentage ,SERVICE_TAX=:serviceTax, TOTAL_PREMIUM=:totalPremiumAmount, COMMISSION_RATE=:commionRate, COMMISSION_AMOUNT=:commionRateAmount, VEHICLE_NO=:vehicleNumber, IDV=:iDV, \
VEHICLE_MAKE=:vehicleMake, YEAR_OF_MANUFACTURING=:vehicleManufactureYear, NCB_PERCENTAGE=:nBC, \
POLICY_TYPE=:fireTypeOfPolicy, ID_CARD=:iDCard, DESPATCH_DATE=:miscDispatchDate,  SPECIFIC_POLICY=:marineTypeOfPolicy, OPEN_POLICY=:marineOpenPolicy, OPEN_COVER=:marineOpenCover, \
OTHERS=:marineOtherPolicies, VOYAGE_FROM=:marineVoyageFrom, VOYAGE_TO=:marineVoyageTo, BASIC_RATE=:basicRate, EARTHQUAKE_PREMIUM=:earthQuakePremium, ADDITIONAL_PERILS_PREMIUM=:anyAdditionalPremium, \
SUM_INSURED=:sumInsured, COLLECTION_DATE=:collectionDate, AGENTNAME=:agent, POLICY_DETAILS=:policyDetails, RENEWAL_AMOUNT=:renewalAmount, RENEWAL_COMPANY=:renewalcompany, UPDATED_BY=:userName where id=:id
 
CREATE_AGENT_SQL = INSERT INTO agent (fullname, screenname) VALUES(:name, :screenName)

CREATE_INSURANCE_SQL = INSERT INTO insurance (fullname, screenname) VALUES(:name, :screenName)

GET_AGENT_SQL = select screenname from agent

GET_INSURANCE_SQL = select screenname from insurance where screenname not in ('')

GET_OFFICE_CODE_SQL = select distinct office_code from test_prefixTELOS where office_code not in ('')

GET_COMPANY_SQL = select distinct COMPANY from test_prefixTELOS where company not in ('')

GET_SCANNED_FILES_SQL = select id,name,description,scanned,scanned_by from scan where id in (:scanIds)

CREATE_EMAIL_LOG = INSERT INTO email(address, client_id, message, user_id) VALUES(:address, :clientId, :message, :userId)

CREATE_EMAILED_FILE_LOG = INSERT INTO email_file(email_id, file_id, user_id) VALUES(:emailId, :fileId, :userId)

GET_EMAILED_FILE = select (select username from account where id = email.USER_ID) USER ,email.ADDRESS,email.updated_on UPDATED_ON from email_file efile JOIN email on email.id = efile.EMAIL_ID where efile.FILE_ID =:fileId

GET_EMAIL_LIST_FOR_CLIENT = select distinct C.id,C.EMAIL,C.PHONE_NO,C.SECONDARY_PHONE_NO,C.POLICY_CERTIFICATE_NO from scan_email SE join scan S on SE.SCAN_ID = S.ID JOIN test_prefixTELOS C on SE.CLIENT_ID = C.ID where MAIL_DATE='3914-01-31'

GET_FILES_TO_EMAIL_FOR_CLIENT = select S.id,S.name,S.scanned,S.description from scan_email SE join scan S on SE.SCAN_ID = S.ID where SE.CLIENT_ID =:clientId and MAIL_DATE='3914-01-31'

END_DATE_DOCUMENTS_AFTER_EMAIL = UPDATE scan_email SET MAIL_DATE = :date where SCAN_ID = :scanId

LOG_SMS = INSERT INTO sms(client_id, template_id, phone_number, CREATED_BY) VALUES(:clientId, :template, :phoneNumber, :userId)

GET_EMAIL_ID_LIST = select distinct EMAIL_ADDRESS from email_list where EMAIL_ADDRESS not in ('')

GET_COMPANY_DETAILS_SQL = select distinct id,COMPANY,PHONE_NO,SECONDARY_PHONE_NO,EMAIL,SECONDARY_EMAIL,INSURED_ADDRESS from test_prefixTELOS where COMPANY  not in (' ') and COMPANY = :companyName order by created_on LIMIT 1

GET_INSURANCE_COMPANY_DETAILS = select distinct client.OFFICE_CODE,COMPANY_NAME,BRANCH_NAME from test_prefixTELOS client where client.OFFICE_CODE not in (' ') and client.OFFICE_CODE = :officeCode and COMPANY_NAME is not null and BRANCH_NAME is not null order by created_on LIMIT 1

DELETE_DOCUMENT_FOR_CLIENT = delete from scan where CLIENT_ID = :clientId and id = :documentId

POLICY_RENEWAL = INSERT INTO renewals (EXPIRED_ID, RENEWED_ID) VALUES (:expiredId,:renewedId)

GET_RENEWAL_CLIENTS =   select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where (INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 3 DAY) or INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 15 DAY) \
or INSURANCE_TO = DATE_ADD(CURRENT_DATE,INTERVAL 30 DAY) AND (PHONE_NO is not null or SECONDARY_PHONE_NO is not null)) AND id NOT IN (select expired_ID from renewals)

GET_FILES_TO_DISPLAY = select S.id,S.name,S.scanned,S.description from  scan S where S.id =:fileId